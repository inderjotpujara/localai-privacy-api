version: "3.8"

services:
  # LocalAI Service
  localai:
    image: localai/localai:latest-aio-cpu
    container_name: localai
    ports:
      - "8080:8080"
    environment:
      - DEBUG=true
      - MODELS_PATH=/models
      - CONTEXT_SIZE=4096
      - THREADS=4
    volumes:
      - localai_models:/models
      - localai_data:/tmp/localai
    restart: unless-stopped
    networks:
      - local-llm-network

  # Node.js API Service - BUILD FROM SOURCE FOR TESTING
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: local-llm-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET}
      - LOCALAI_URL=http://localai:8080
      - LOCALAI_MODEL=${LOCALAI_MODEL:-llama3}
      - DATABASE_URL=${DATABASE_URL}
      - LOKI_URL=http://loki:3100
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
      localai:
        condition: service_started
    restart: unless-stopped
    networks:
      - local-llm-network

  # PostgreSQL with pgvector
  postgres:
    image: pgvector/pgvector:pg15
    container_name: postgres-pgvector
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-localllm}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - local-llm-network

  # Loki for log aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - local-llm-network

  # Promtail for log shipping
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - local-llm-network

  # Grafana for observability
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - local-llm-network

volumes:
  postgres_data:
  grafana_data:
  localai_models:
  localai_data:

networks:
  local-llm-network:
    driver: bridge
